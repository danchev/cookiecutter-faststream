[build-system]
requires = ["uv_build>=0.8.22,<0.9.0"]
build-backend = "uv_build"

[project]

version = "0.1.0"
name = "{{cookiecutter.project_slug}}"

dependencies = [
    "faststream[cli, {{cookiecutter.streaming_service}}, docs]>=0.5.0",
]

[dependency-groups]
lint = [
    "black>=25.9.0",
    "ruff>=0.13.1",
]

static-analysis = [
    "types-PyYAML",
    "types-setuptools",
    "types-ujson",
    "mypy>=1.18.2",
    "bandit>=1.8.6",
]

testing = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
]

dev = [
    {include-group = "lint"},
    {include-group = "static-analysis"},
    {include-group = "testing"},
]

[tool.uv.build-backend]
module-name = "{{cookiecutter.project_slug}}"
module-root = "."

[tool.pytest.ini_options]
filterwarnings =["ignore::DeprecationWarning"]

[tool.mypy]
strict = true
python_version = "3.12"
ignore_missing_imports = true
install_types = true
non_interactive = true

# from https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true

disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = false

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
fix = true
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "Q",  # flake8-quotes
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.bandit]
